//----------------------Libraries to be included from GitHub------------------------/
#include <Wire.h>
#include <ESP8266WiFi.h>  //For Wi-Fi operations
#include <ESP8266HTTPClient.h> //needed for library
#include <DNSServer.h>
#include <ESP8266WebServer.h> // For creation of online web server
#include <WiFiManager.h>

String apiKey = "AX8C188WC16YCZVF";     //  Enter your Write API key from ThingSpeak
const char* server = "api.thingspeak.com";
WiFiClient client;

void setup()
{ 
  Serial.begin(115200);
  delay(10);
  WiFiManager wifiManager; //To create web server
  wifiManager.resetSettings();
  wifiManager.autoConnect("OCLEMS"); //access point name of the NodeMCU
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println("connected...yay :)");
}

void loop()
{
float v3= analogRead(A0); // analog pin of NodeMCU
int value1;

   if(v3<10) //UV index conditions
    value1=0;
    if(v3>=10 && v3<46)
    value1=1;
    if(v3>=46 && v3<65)
    value1=2;
    if(v3>=65 && v3<83)
    value1=3;
    if(v3>=83 && v3<103)
    value1=4;
    if(v3>=103 && v3<124)
    value1=5;
    if(v3>=124 && v3<142)
    value1=6;
    if(v3>=142 && v3<162)
    value1=7;
    if(v3>=162 && v3<180)
    value1=8;
    if(v3>=180 && v3<200)
    value1=9;
    if(v3>=200 && v3<221)
    value1=10;
    if(v3>=221 && v3<240)
    value1=11;
    if(v3>=240)
    value1=12; 


  if (client.connect(server, 80))  //   "184.106.153.149" or api.thingspeak.com
  {
    String postStr = apiKey;

    postStr += "&field1=";
    postStr += String(v3);
    postStr += "&field2=";
    postStr += String(value1);
    postStr += "\r\n\r\n";

    client.print("POST /update HTTP/1.1\n");
    client.print("Host: api.thingspeak.com\n");
    client.print("Connection: close\n");
    client.print("X-THINGSPEAKAPIKEY: " + apiKey + "\n");
    client.print("Content-Type: application/x-www-form-urlencoded\n");
    client.print("Content-Length: ");
    client.print(postStr.length());
    client.print("\n\n");
    client.print(postStr);

    Serial.println("%. Send to Thingspeak.");
  }
  client.stop();

  Serial.println("Waiting...");

  // thingspeak needs minimum 15 sec delay between updates, i've set it to 30 seconds
  delay(10000);
}
